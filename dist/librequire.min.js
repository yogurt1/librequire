var Fetch,bind=function(t,e){return function(){return t.apply(e,arguments)}},indexOf=[].indexOf||function(t){for(var e=0,n=this.length;n>e;e++)if(e in this&&this[e]===t)return e;return-1};Fetch=function(){function t(t,e,n){this.address=t,this.method=null!=e?e:"get",this.request=bind(this.request,this),fetch(this.request()).then(this.json).then(function(t){return n(t)}).then(null,function(t){throw new Error(t)})}return t.prototype.json=function(t){return t.json()},t.prototype.status=function(t){var e,n,r;return n=t.status,indexOf.call(function(){for(r=[],e=200;300>=e;e++)r.push(e);return r}.apply(this),n)>=0?(Promise.resolve(t),console.log("1")):(console.log("2"),Promise.reject(new Error(t.statusText)))},t.prototype.request=function(){return new Request(this.address,{method:this.method})},t}();var Require,extend=function(t,e){function n(){this.constructor=t}for(var r in e)hasProp.call(e,r)&&(t[r]=e[r]);return n.prototype=e.prototype,t.prototype=new n,t.__super__=e.prototype,t},hasProp={}.hasOwnProperty;Require=function(t){function e(t,e){this.address=t,this.method=get,fetch(this.request()).then(function(t){return t.text()}).then(function(t){return e(t)}).then(null,function(t){throw new Error(t)})}return extend(e,t),e}(Fetch),console.log(require("test"));
//# sourceMappingURL=librequire.min.js.map
